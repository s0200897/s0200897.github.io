{"version":3,"sources":["redux/reducers.js","redux/types.js","api/OpenWeatherMapApi.js","components/Forecast.js","components/ForecastDetailPage.js","components/Location.js","components/SetLocationPage.js","redux/actions.js","components/ForecastPage.js","components/App.js","index.js"],"names":["locationReducer","state","action","type","data","forecastReducer","API_KEY","API_URI","API_UNIT","neddle","a","PARAM","url","fetch","response","json","list","console","error","polish5DaysForecast","forecastMap","map","F","index","day","dt_txt","tempMin","main","temp_min","tempMax","temp_max","conditions","weather","description","icon","wind","speed","reduce","key","substring","has","set","hourly","item","get","Math","min","max","substr","push","Map","values","locationID","result","fetchLocations","fetch5DaysForecast","Forecast","inDetail","onClick","className","alt","src","ForecastDetailPage","date","forecastDetails","onClose","forecast","Location","location","coord","timeoutId","SetLocationPage","props","_setLocation","setLocation","_refreshForecasts","locations","api","id","then","forecasts","fetchForecasts","needle","clearTimeout","length","this","setState","setTimeout","name","sys","country","defaultValue","onChange","e","preventDefault","_refreshLocations","target","value","trim","autoFocus","lat","lon","Component","connect","dispatch","ForecastPage","showForecastDetailPage","selectDateIndex","hideForecastDetailPage","showSetLocationPage","hideSetLocationPage","detailForecast","App","store","createStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.97694ac6.chunk.js","sourcesContent":["import { SET_LOCATION, FETCH_FORECASTS } from './types'\n\nconst locationReducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOCATION:\n      return action.data\n    default:\n      return state\n  }\n}\n\nconst forecastReducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_FORECASTS:\n      return action.data\n    default:\n      return state\n  }\n}\nexport const reducer = (state = {}, action) => {\n  return {\n    location: locationReducer(state.location, action),\n    forecasts: forecastReducer(state.forecasts, action),\n  }\n}\n","export const SET_LOCATION = 'SET_LOCATION'\nexport const FETCH_FORECASTS = 'FETCH_FORECASTS'\n","const API_KEY = '715ac60004286c422cbbbf1d407f9a12'\nconst API_URI = 'https://api.openweathermap.org/data/2.5'\nconst API_UNIT = 'metric'\nexport const API_ICON_URI = 'https://openweathermap.org/img/wn/'\n\nasync function fetchLocations(neddle) {\n  const PARAM = `type=like&sort=population&units=${API_UNIT}&cnt=7`\n  let url = `${API_URI}/find?q=${neddle}&${PARAM}&appid=${API_KEY}`\n  try {\n    const response = await fetch(url)\n    const json = await response.json()\n    // console.log(json)\n    return json.list\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction polish5DaysForecast(data) {\n  if (!data) return\n  const forecast3hoursList = data.list.map(function(F, index) {\n    return {\n      day: F.dt_txt,\n      tempMin: F.main.temp_min,\n      tempMax: F.main.temp_max,\n      conditions: F.weather[0].description,\n      icon: F.weather[0].icon,\n      wind: F.wind.speed,\n    }\n  })\n\n  const forecastMap = forecast3hoursList.reduce(function(map, F) {\n    const key = F['day'].substring(0, 10)\n    if (!map.has(key)) {\n      map.set(key, { ...F, day: F['day'].substring(0, 10), hourly: [] })\n    }\n    const item = map.get(key)\n    item['tempMin'] = Math.min(item['tempMin'], F['tempMin'])\n    item['tempMax'] = Math.max(item['tempMax'], F['tempMax'])\n\n    F['day'] = F['day'].substr(11)\n    item.hourly.push(F)\n    return map\n  }, new Map())\n\n  return [...forecastMap.values()]\n}\n\nasync function fetch5DaysForecast(locationID) {\n  let url = `${API_URI}/forecast?id=${locationID}&units=${API_UNIT}&appid=${API_KEY}`\n  try {\n    const response = await fetch(url)\n    const result = await response.json()\n    // console.log(polish5DaysForecast(result))\n    return polish5DaysForecast(result)\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default { fetchLocations, fetch5DaysForecast }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { API_ICON_URI } from '../api/OpenWeatherMapApi'\n\nconst Forecast = ({\n  inDetail = false,\n  day,\n  icon,\n  conditions,\n  tempMax,\n  tempMin,\n  wind,\n  onClick,\n}) => (\n  <li className=\"Forecast\" onClick={onClick}>\n    <span>\n      <img alt={icon} src={`${API_ICON_URI}/${icon}@2x.png`} />\n    </span>\n\n    <span>\n      <h4>\n        {day}, {conditions}\n      </h4>\n      temperature from {tempMin} to {tempMax} °С, wind {wind} m/s.\n      {!inDetail ? <p>( Click to see detail forecast )</p> : null}\n    </span>\n  </li>\n)\n\nForecast.propTypes = {\n  onClick: PropTypes.func,\n  day: PropTypes.string.isRequired,\n}\n\nexport default Forecast\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Forecast from './Forecast'\n\nconst ForecastDetailPage = ({ date, forecastDetails, onClose }) => (\n  <article className=\"ForecastDetailPage modal\">\n    <div className=\"modal-content\">\n      <span className=\"close\" onClick={onClose}>\n        &times;\n      </span>\n      <h1>3-hourly forecast ({date})</h1>\n      <ul>\n        {forecastDetails.map(forecast => (\n          <Forecast key={forecast.day} {...forecast} inDetail={true} />\n        ))}\n      </ul>\n    </div>\n  </article>\n)\n\nForecastDetailPage.propTypes = {\n  forecastDetails: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nexport default ForecastDetailPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { API_ICON_URI } from '../api/OpenWeatherMapApi'\n\nconst Location = ({ onClick, location, icon, coord }) => (\n  <li className=\"Location\" onClick={onClick}>\n    <span>\n      <h3>\n        <img alt={icon} src={`${API_ICON_URI}/${icon}.png`} />\n      </h3>\n    </span>\n    <span>\n      <h4>{location}</h4>\n      <h5 alt=\"Geo coords\">[{coord}]</h5>\n    </span>\n  </li>\n)\n\nLocation.propTypes = {\n  onClick: PropTypes.func,\n  location: PropTypes.string.isRequired,\n}\n\nexport default Location\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setLocation, fetchForecasts } from '../redux/actions'\nimport api from '../api/OpenWeatherMapApi'\nimport Location from './Location'\n\nlet timeoutId = -1\nclass SetLocationPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { locations: [] }\n  }\n\n  _setLocation = location => {\n    this.props.setLocation(location)\n    this._refreshForecasts(location)\n  }\n\n  _refreshForecasts(location) {\n    if (!location) return\n    api.fetch5DaysForecast(location.id).then(forecasts => {\n      this.props.fetchForecasts(forecasts)\n    })\n  }\n\n  _refreshLocations(needle) {\n    clearTimeout(timeoutId)\n    if (!needle && needle.length < 3) {\n      this.setState({ locations: [] })\n      return\n    }\n    timeoutId = setTimeout(async () => {\n      let locations = await api.fetchLocations(needle)\n      this.setState({ locations })\n    }, 230)\n  }\n\n  render() {\n    const location = this.props.location\n      ? this.props.location.name + ', ' + this.props.location.sys.country\n      : ''\n    return (\n      <article className=\"SetLocationPage modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={this.props.onClose}>\n            &times;\n          </span>\n          <h1>Set Location</h1>\n          <input\n            defaultValue={location}\n            onChange={e => {\n              e.preventDefault()\n              this._refreshLocations(e.target.value.trim())\n            }}\n            autoFocus={true}\n          ></input>\n          <ul>\n            {this.state.locations\n              ? this.state.locations.map(location => (\n                  <Location\n                    key={location.id}\n                    icon={location.weather[0].icon}\n                    location={location.name + ', ' + location.sys.country}\n                    coord={location.coord.lat + ', ' + location.coord.lon}\n                    onClick={() => {\n                      this._setLocation(location)\n                      this.props.onClose()\n                    }}\n                  />\n                ))\n              : null}\n          </ul>\n        </div>\n      </article>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLocation: location => dispatch(setLocation(location)),\n    fetchForecasts: forecasts => dispatch(fetchForecasts(forecasts)),\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    location: state.location,\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetLocationPage)\n","import { SET_LOCATION, FETCH_FORECASTS } from './types'\n\nexport const setLocation = location => {\n  return { type: SET_LOCATION, data: location }\n}\n\nexport const fetchForecasts = forecasts => {\n  return { type: FETCH_FORECASTS, data: forecasts }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Forecast from './Forecast'\nimport ForecastDetailPage from './ForecastDetailPage'\nimport SetLocationPage from './SetLocationPage'\n\nclass ForecastPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showSetLocationPage: false,\n      showForecastDetailPage: false,\n      selectDateIndex: 0,\n    }\n  }\n\n  showForecastDetailPage = index => {\n    this.setState({ showForecastDetailPage: true, selectDateIndex: index })\n  }\n\n  hideForecastDetailPage = () => {\n    this.setState({ showForecastDetailPage: false })\n  }\n\n  showSetLocationPage = () => {\n    this.setState({ showSetLocationPage: true })\n  }\n\n  hideSetLocationPage = () => {\n    this.setState({ showSetLocationPage: false })\n  }\n\n  render() {\n    const forecasts = this.props.forecasts\n    const detailForecast = this.state.showForecastDetailPage\n      ? this.props.forecasts[this.state.selectDateIndex]\n      : null\n    return (\n      <div className=\"ForecastPage\">\n        <header>\n          <h1>Weather Forecast </h1>\n          <button onClick={this.showSetLocationPage}>\n            {this.props.location\n              ? this.props.location.name +\n                ', ' +\n                this.props.location.sys.country\n              : 'Set Location'}\n          </button>\n        </header>\n        <h2>5-days forecast</h2>\n        <ul>\n          {forecasts ? (\n            forecasts.map((forecast, index) => (\n              <Forecast\n                key={forecast.day}\n                {...forecast}\n                onClick={() => {\n                  this.showForecastDetailPage(index)\n                }}\n              />\n            ))\n          ) : (\n            <div className=\"hero\">\n              <h4>Hi,</h4>\n              <div>\n                This is a weather forecast app, you can:\n                <ol>\n                  <li>\n                    Set a location, click button [Set Location] on top, you can\n                    also change location after set a location.\n                  </li>\n                  <li>\n                    See the 5-days forecast show in page after location set.\n                  </li>\n                  <li>\n                    See the 3-hourly forecast for that date by clicking the day.\n                  </li>\n                </ol>\n              </div>\n            </div>\n          )}\n        </ul>\n\n        {this.state.showForecastDetailPage ? (\n          <ForecastDetailPage\n            date={detailForecast.day}\n            forecastDetails={detailForecast.hourly}\n            onClose={() => this.hideForecastDetailPage()}\n          />\n        ) : null}\n\n        {this.state.showSetLocationPage ? (\n          <SetLocationPage onClose={this.hideSetLocationPage} />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    location: state.location,\n    forecasts: state.forecasts,\n  }\n}\n\nexport default connect(mapStateToProps)(ForecastPage)\n","import React from 'react'\nimport ForecastPage from './ForecastPage'\nimport './App.css'\n\nconst App = () => <ForecastPage />\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { reducer } from './redux/reducers'\nimport App from './components/App'\n// import mockData from '../MockData'\n\nconst store = createStore(reducer)\n\nconst WeatherApp = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nrender(<WeatherApp />, document.getElementById('root'))\n"],"sourceRoot":""}